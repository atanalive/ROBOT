
一些笔记


1,符号类型
  u8       unsigned char     无符号char,不能输入小数
  s8        signed char      有符号char,不能小数
  short                      有符号16位,半整型
  int                        有符号32位,整型
  float                      有符号,32位,单精度浮点型
  dauble                     有符号,64位,双精度浮点型
  
2,功能配置
   
  红灯指示  激光测距正在工作
  绿灯
  按键
  
3,小车整体思路实现（供小组其他成员了解）
   1，开始时小车后面在前，先向前顶墙，记录此时陀螺仪的值，以此建立x轴
   2，小车向中间移动，确认到后发送0X01给树莓派，然后开始接收树莓派传来的数据
   3，小车通过抽签次序和树莓派返回的抽签次序计算出移动路径（也就是设置好了从开始到返回起始区的所有的移动的路径）
   4，然后移动到物料台后，发送0x02给树莓派表示抓取矫正矫正位姿开始。然后通过不断接收树莓派返回的数据不断调整小车位姿（具体通讯协议请看《基于电控对视觉的设计要求》）
   5，调整位姿完成后，进行抓取，判断抓取完成后（预想由视觉判断抓取完成），小车触发 后退校准模式中断
   6，小车后退到传感器接触到的第一条黑线，并借黑线矫正位姿角度，然后转身设定好的180°，再后退顶墙，再次校准小车陀螺仪的初始角，并以此再次重置世界坐标x轴的角度方位。
   7，小车移动到投放区（行驶中一直都有路径跟踪结合pid调控反馈纠正小车行驶路径）
   8，只要小车抵达设定的误差范围内的位置，则判断小车成功到达，并切换到下一模式：投放模式
   9，投放模式中，发送0x03给树莓派，表示进入投放矫正模式（这一点我仍有疑惑，关于视觉的实现到底能不能让小车的位姿精准到正确投放的地步？其实小车自身也有pid调控位姿，就是怕精度不够）
   10，矫正完成后，小车切换到投放模式，树莓派监视投放完成后返回一个协议值给单片机，然后小车进行下一步动作，如此循环，
   11，完成任务后从投放区直接回到起始区，然后进入待机模式。
   
 4，f103zet6的usart配置(F103数据手册)
  UART4_TX PC10
  UART4_RX PC11
  UART5_TX PC12
  UART5_RX PD2
  
 5，一些心得
  1，变量名尽量具体，长名字才是好名字，短名字找错误会哭的
  2，用到引脚的c都放到HARDWORE里面，避免出引脚图时漏掉一些引脚
  3，头文件不能定义变量，除非只供一个c使用
  4，struct是个数据类型，跟int，float一样，平时定义成全局变量没问题，但放到局部变量要传入函数还得用指针。
  